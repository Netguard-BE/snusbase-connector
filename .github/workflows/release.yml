name: Build, Push, and Release Docker Image (Beta/Production)

on:
  push:
    tags:
      - 'v*'
      - 'beta-*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image (Beta)
        if: startsWith(github.ref_name, 'beta-')
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/netguard-be/snusbase-connector:${{ github.ref_name }}
            ghcr.io/netguard-be/snusbase-connector:beta-latest

      - name: Build and push Docker image (Production)
        if: startsWith(github.ref_name, 'v')
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/netguard-be/snusbase-connector:${{ github.ref_name }}
            ghcr.io/netguard-be/snusbase-connector:latest

      - name: Create Release (Beta)
        if: startsWith(github.ref_name, 'beta-')
        id: create_beta_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Beta Release ${{ github.ref_name }}
          draft: false
          prerelease: true

      - name: Create Release (Production)
        if: startsWith(github.ref_name, 'v')
        id: create_production_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false